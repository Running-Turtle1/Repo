# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestJd2():
    def setup_method(self, method):
        self.driver = webdriver.Firefox()
        self.vars = {}

    def teardown_method(self, method):
        self.driver.quit()

    def wait_for_window(self, timeout=2):
        time.sleep(round(timeout / 1000))
        wh_now = self.driver.window_handles
        wh_then = self.vars["window_handles"]
        if len(wh_now) > len(wh_then):
            return set(wh_now).difference(set(wh_then)).pop()

    def test_jd2(self):
        self.driver.get("https://www.jd.com/")
        self.driver.set_window_size(550, 692)

     

        try:
            # 等待搜索框并输入内容
            search_box = WebDriverWait(self.driver, 10).until(
                EC.presence_of_element_located((By.ID, "key"))
            )
            search_box.click()
            search_box.send_keys("小米耳机")
        except:
            print("找不到搜索框元素")

        try:
            # 等待搜索按钮并点击
            search_button = WebDriverWait(self.driver, 10).until(
                EC.element_to_be_clickable((By.CSS_SELECTOR, ".button"))
            )
            search_button.click()
        except:
            print("找不到搜索按钮元素")

        try:
            # 等待筛选元素并点击
            filter_element = WebDriverWait(self.driver, 10).until(
                EC.element_to_be_clickable((By.CSS_SELECTOR, "#J_feature li:nth-child(1) i"))
            )
            filter_element.click()
        except:
            print("找不到筛选元素")

        self.vars["window_handles"] = self.driver.window_handles

        try:
            # 等待商品名称元素并点击
            product_name = WebDriverWait(self.driver, 10).until(
                EC.element_to_be_clickable((By.CSS_SELECTOR, "#warecard_100141279926 > .p-name em"))
            )
            product_name.click()
        except:
            print("找不到商品名称元素")

        self.vars["win2378"] = self.wait_for_window(2000)
        self.driver.switch_to.window(self.vars["win2378"])

        try:
            # 等待购物车按钮并点击
            add_to_cart_button = WebDriverWait(self.driver, 10).until(
                EC.element_to_be_clickable((By.ID, "InitCartUrl"))
            )
            add_to_cart_button.click()
        except Exception as e:
            # 处理找不到购物车按钮或按钮不可点击的异常
            print(f"找不到购物车按钮或按钮不可点击: {e}")
            # 可以在这里尝试使用其他定位方式，例如：
            # add_to_cart_button = WebDriverWait(self.driver, 10).until(
            #     EC.element_to_be_clickable((By.CSS_SELECTOR, "你的新定位方式"))
            # )
            # add_to_cart_button.click()